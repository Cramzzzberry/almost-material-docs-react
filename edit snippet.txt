
        "--checkbox-size": "1.25rem",
        "--checkbox-border-width-checked": "10px",
        "--check-top": "1px",
        "--check-size": "1.25rem",
        "--check-indeterminate-border-x": "4px",
        "--check-indeterminate-border-y": "9px",

        minWidth: "var(--checkbox-size)",
        maxWidth: "var(--checkbox-size)",
        minHeight: "var(--checkbox-size)",
        maxHeight: "var(--checkbox-size)",

        "&:checked": {
          borderWidth: "var(--checkbox-border-width-checked)",
        },
        
        "&::after": { //my own check :>
          top: "var(--check-top)",

          height: "var(--check-size)",
          width: "var(--check-size)",

          content: `url('data:image/svg+xml; utf8, <svg width="14" height="14" viewBox="0 0 172 139" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="172" height="139" fill="none"/><rect x="19.6274" y="63" width="80" height="32" rx="8" transform="rotate(45 19.6274 63)" fill="${ ShadeHexColor(color, LightOrDark(color) === 'light' ? shades[10] : shades[90]).replace("#", "%23") }"/><rect x="31" y="119.279" width="172" height="32" rx="8" transform="rotate(-45 31 119.279)" fill="${ ShadeHexColor(color, LightOrDark(color) === 'light' ? shades[10] : shades[90]).replace("#", "%23") }"/></svg>')`,
        },

        "&:indeterminate": {//indeterminate checkbox
          borderWidth: "var(--check-indeterminate-border-x), var(--check-indeterminate-border-y)",

          "&::after": {
            content: "''",
          }
        },